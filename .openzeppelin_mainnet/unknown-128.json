{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3E01030Aa45DaeC75dC87fC3988294896BA364c6",
    "txHash": "0xd08b6115cce3d0abe9d311b70ea223e266053ce144f0aa5867fc9015a1783285",
    "deployTransaction": {
      "hash": "0xd08b6115cce3d0abe9d311b70ea223e266053ce144f0aa5867fc9015a1783285",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x5C9E0992d9562cfcDc2095082AEfce4E8aF98543",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x861c4680"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x076980"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 275,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x1ea71cb12d3ff39f13393a937b36be0eec51a686572ddcb450d906d23f934d7c",
      "s": "0x1630340eb3097141406a922eb534bd1050d4a2be195bcbc7b3a880c9ac289497",
      "v": 292,
      "creates": "0x3E01030Aa45DaeC75dC87fC3988294896BA364c6",
      "chainId": 128
    }
  },
  "proxies": [
    {
      "address": "0x971f8A2ff8f0766627f76f1e9377ef0B5Abcb87E",
      "txHash": "0xe033c03184a2ec4db40f942d3a5a0b5459f755642a08a476a14938f97b10e90f",
      "kind": "transparent"
    },
    {
      "address": "0x8B6ee81D49095532D57cC8103A3412ec5B2ef8f6",
      "txHash": "0x3527bae08b9b04840dec947b3becee5e70b0c5efcd21dd0ea90b6ec1d706bd67",
      "kind": "transparent"
    },
    {
      "address": "0x8CcFe961bf5de8BD05a30Cc921fd09B5c96002c6",
      "txHash": "0xd26a6bb0006fb725813c4f9879be568073cb50b0936341a58ae51d1c2d8849ec",
      "kind": "transparent"
    },
    {
      "address": "0xe4DeB3059DED5399aD2aC000CCA9F13276363115",
      "txHash": "0x1cd700ebd1786023c16fd258f53d45dea644f25d5e8a70fab6e93e2318f39dca",
      "kind": "transparent"
    },
    {
      "address": "0x9fe7928c375D504155F19A7d3b65A68fFbC8E0A2",
      "txHash": "0x53cd867a42eee80d4730bc3b0851427dcdb3c191e38d1cb7438ce07da522785e",
      "kind": "transparent"
    },
    {
      "address": "0x4a2186390d647075Acdde4ef211026B9cF647020",
      "txHash": "0x121b5430581f8a56642ca215e1543b8346ae2fec75a65619a2a44ee8befb706c",
      "kind": "transparent"
    },
    {
      "address": "0x1ee4cdB121fbB4aA70140C68A84e0b7EA7e154a3",
      "txHash": "0x3033653be02cb9f8d516918fbeb81314dd52f93b069d4ff43f611f51915251d1",
      "kind": "transparent"
    },
    {
      "address": "0xA38a2038136a57B6B1019a50A91Ab66738905a8A",
      "txHash": "0xfb0f8f7cdcdebc264d285232219d2f2c43ef288857cc2fd046a70cf1882448c3",
      "kind": "transparent"
    },
    {
      "address": "0xfa8440025d7EE21925be5A4adfd4aC35A156e0ed",
      "txHash": "0x1d624c301c1e4d9b0d142b699b200909386ec01ca27c4efc53464c34b8b9951a",
      "kind": "transparent"
    },
    {
      "address": "0x8b963E30f67C9a6C3F88306e799Fe2bBC3626f2E",
      "txHash": "0x4ca8c1a93efdd42169e3c280480a9d71413c455d4a58453a48d89eda3e982027",
      "kind": "transparent"
    },
    {
      "address": "0xdf42B52157c10aaD666886dB0AB8Bb99b6485ae6",
      "txHash": "0x0e5929124fca81e3b3eab3b81d94142d800dcaf7c3e5e74fc1c0c99a825aebe9",
      "kind": "transparent"
    },
    {
      "address": "0xAfFb645d73A784Ab53D074488349fF4dC22D3435",
      "txHash": "0x6c17ed7fd8713c34465e4ef4f3823e93b24617d13982740dce654918bb288241",
      "kind": "transparent"
    },
    {
      "address": "0x93D3B6713c08F50C576490c7C975E1D315927EF3",
      "txHash": "0x264c584c8c93d3555dac102090fd57abe023e4dac464e8e6bdba6f9187fb9487",
      "kind": "transparent"
    },
    {
      "address": "0x6F5E4F841DAbEac07A9270cdD26421aA869A59Bb",
      "txHash": "0x937fc235e64c48fa62ee0614585b16dc53a3ed07fd42c9ee61b8241184ae9afd",
      "kind": "transparent"
    },
    {
      "address": "0x64840C731022E51b20Dc5aeA6180F1b2299b5De1",
      "txHash": "0x846d4e8f8e4f8c8e71488da7e388b5f0ad873681da05d25a159fd3a9b1cccf57",
      "kind": "transparent"
    },
    {
      "address": "0x5C3CD4846d07548020eD9F40a08Fd66D16f71fE7",
      "txHash": "0x8b797b0ab3907966d685fdf4f2bdb6341b1e512251fb2aef124d1ad8890a9add",
      "kind": "transparent"
    },
    {
      "address": "0xB6626Eb5BB5918D01593Ad8504E4513f4385b62b",
      "txHash": "0x52f695b50c0a48aefa87124fd19c7f1041b0aae8f5c57272e06849c8fee83ae4",
      "kind": "transparent"
    },
    {
      "address": "0xfb5A070641EF57459D9dA9f5d7a03DF37726C9a6",
      "txHash": "0x31937179ce4a143f99b3c31443a142dea78dc870f9fdbb84767e07e04fa75781",
      "kind": "transparent"
    },
    {
      "address": "0x5902BDbB4FDD0d44e2871577eaA46Fd0b3424B3e",
      "txHash": "0xe46871296f18239e2d31a0ed31708f520906c07068882ea052d01da7387d7554",
      "kind": "transparent"
    },
    {
      "address": "0xb4F8FeBb7372F47bEa2B06B6F9D878093a3B014E",
      "txHash": "0x46aef8a011fef0558cd2c26a3d3cbf14736b8aaf814832277e4b45842714da3e",
      "kind": "transparent"
    },
    {
      "address": "0x22A3f421115FbF2eda8AbCb56CE63219481C2A6C",
      "txHash": "0x4bf336c6e071152e4c35a123e3d5ec5d270836ad7546f2d67660f660f70da699",
      "kind": "transparent"
    },
    {
      "address": "0x37De929B55B811FEe16a9244a0De6aac008c3F3C",
      "txHash": "0x167a0a828f4b2ba9def388347843d240ef91b63e2405f4c67846c7b44a6491c9",
      "kind": "transparent"
    },
    {
      "address": "0xC5293535d05A98f73f5e2Af9A804363FA39BE5f3",
      "txHash": "0x6d172cf1567c0917a43c72bdbeba53265693a10f10af1897fb62c0be46e50135",
      "kind": "transparent"
    },
    {
      "address": "0x39349D293eEFf636cCFBabf3632B3f8Abbe3201a",
      "txHash": "0x794e87a9d770dcd94933d307e9e5e6e012ea58d1c2925855811db04003fc8b80",
      "kind": "transparent"
    },
    {
      "address": "0x5b7eCB86F6A0A13c9dFB3a2572d3DC8F2D82C5eF",
      "txHash": "0xeea110bef9dc51bf7aab6ac1ab1e62656c292abf92c14f3d77ba4a3baf796605",
      "kind": "transparent"
    },
    {
      "address": "0x28311734d9fc560035f9ae56dC8940c3197A8eB2",
      "txHash": "0xbe7201ddb59651d3fdee5fc9d13ee4a03d6c0c6f828f3f45af5665a60c929ae5",
      "kind": "transparent"
    },
    {
      "address": "0xf3BECA932c2d35bEF19e9ca3460EE91Cb3813d05",
      "txHash": "0xbbd3b62ffda90fc3a238fa73d31617d291dfc8fabe35b80834a6b6d73fbcbc70",
      "kind": "transparent"
    },
    {
      "address": "0xC73604B6F7f877e29f35f6f1d5B241E900632033",
      "txHash": "0x57ccfdc0a490e7e9918c0276e3110f741c9088711234e1eef1e84e403042c25b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9d587ac7a5412f45865c004e824a80beab578bc831f039e5eae7d5ab98eed3cc": {
      "address": "0x7cC8719C5674024f3Ca6113af6E309C09f9A6068",
      "txHash": "0x8576591d131afe46c21068e7e834027876405cd78a7c6dff29c9b371b8b8f675",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2082_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2082_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1902_storage"
              }
            ]
          },
          "t_struct(Set)1902_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "36a12332aa92bd25d66faabe8b5034fcd7b4d61a5a9f1d211505bfe8c03dae6b": {
      "address": "0x7D152bAAC4199511Db717A2a21b4a469b24905c1",
      "txHash": "0x02cf15040b988ccd487818260cb7e9c089cd421a499aaa8ac31043755df988d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:20"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)6991",
            "src": "contracts/Config.sol:21"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)6711",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)6918",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)6991": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)6711": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)6918": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ffd6c1ec7d99c641b9768c51d0c309d3061c8a4ddfa5ced4d3099819a103a80e": {
      "address": "0x7Cb7600Ba49D3d0aDB3AE7a3cB9D49AF4dB1DE1e",
      "txHash": "0x4bf974beb0b1ac5c1dad8e4ff4317e49cf322366ab8e1e0f5f58a837d5584e96",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6253_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7681",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7598",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6496_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7681": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7598": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6496_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6496_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6253_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6253_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0fbfb83e471bd15dc5f96397af982be25746fc8aed0160b4fa521753cd2a105b": {
      "address": "0xF9Ff2176E5A920a8642678Fd16344fa237C8E23b",
      "txHash": "0x3345eb464bdfc89b3130e0dd6d8e4cf170abe0fad523b9cf488bcc3b7b3a3b60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)6767",
            "src": "contracts/Gateway.sol:77"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:79"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)3906",
            "src": "contracts/Gateway.sol:80"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)6963",
            "src": "contracts/Gateway.sol:81"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:82"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:83"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:84"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)3906)",
            "src": "contracts/Gateway.sol:86"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:108"
          }
        ],
        "types": {
          "t_contract(IConfig)6767": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)3906": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)6963": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)3906)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_struct(PendingTransfer)3946_storage)dyn_storage": {
            "label": "struct Gateway.PendingTransfer[]"
          },
          "t_struct(PendingTransfer)3946_storage": {
            "label": "struct Gateway.PendingTransfer",
            "members": [
              {
                "label": "crossId",
                "type": "t_uint256"
              },
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "metaAmount",
                "type": "t_uint256"
              },
              {
                "label": "metaFee",
                "type": "t_uint256"
              },
              {
                "label": "feeFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "50095f8c71b08a867a3a94932dee3087f468e2cbf73dd9de47fd71af85b4c08f": {
      "address": "0x06A610D5F302A60eF7e4429A415AB8601191d493",
      "txHash": "0x441c87b197dc328040c2aacfc009221a787f06d0486d5db3c225ebba7223119d",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "f634160710d3da46a4fc8767eb74226c9fba603fb35f23f0da1e2fb86a895fe3": {
      "address": "0x8c19f427D9136f921552FaD81Da87aaB108043Bb",
      "txHash": "0x6aac17bb5e7594948475916c52686cbecfe1a845be5207733cd5e86d3eee9f7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)6991",
            "src": "contracts/Gateway.sol:81"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:82"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:83"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)3966",
            "src": "contracts/Gateway.sol:84"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7195",
            "src": "contracts/Gateway.sol:85"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:86"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)3966)",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:108"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:102"
          }
        ],
        "types": {
          "t_contract(IConfig)6991": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)3966": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7195": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)3966)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_struct(PendingTransfer)4009_storage)dyn_storage": {
            "label": "struct Gateway.PendingTransfer[]"
          },
          "t_struct(PendingTransfer)4009_storage": {
            "label": "struct Gateway.PendingTransfer",
            "members": [
              {
                "label": "crossId",
                "type": "t_uint256"
              },
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "metaAmount",
                "type": "t_uint256"
              },
              {
                "label": "metaFee",
                "type": "t_uint256"
              },
              {
                "label": "feeFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bb33f776b0a0db178b1d0e943f5ce190bebfd9291d0718b93fe111a8f1df4ac9": {
      "address": "0xe91cfAA4388BD3496039fd773306752e6145B691",
      "txHash": "0x4ae90c96c1a61894b8ac53b3b2eb8ed5efb56bf0b426563962573231d979cf7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7692",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7286",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7591",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7395",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7692": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7286": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7591": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7395": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e610cdb043c04368bc162c18bb45e2ddc8a128ca78113a3ccabd3731eea574dc": {
      "address": "0x23Cc481B75eC861d3B8ca23F34a896c00144948E",
      "txHash": "0xcee2683ae572f68d7a409f7b44e9e30b1cbea32b9dc1f2208508716e78f1c2d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7924",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7514",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7823",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7623",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7924": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7514": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7823": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7623": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8cd55b3c2eecfdbabe4004700c83deb32c1302c4f83828841e8ab4208deb150e": {
      "address": "0xA9d9C444581B8538A1D2827565c2d4bDC5883784",
      "txHash": "0x086091a4ed5dc3414a77ac50fdb4cdb90cb5730885c1a0a35f17e9c3902de486",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7592",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4118",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7904",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4118)",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:102"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:103"
          }
        ],
        "types": {
          "t_contract(IConfig)7592": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4118": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7904": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4118)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "db17e03e10e8c2ca0cf91a19fe66bdddf451c068645fceecc2ecbffcffc86253": {
      "address": "0x6D39CFfA630c8877C913D8AB220CBfF905e594EE",
      "txHash": "0xa44a3351ce7ef45b4dcbc5e5ebf6c40630d28a62559427f90966e9428e7b008d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7693",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7285",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7592",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "_extCaller",
            "type": "t_contract(IExtCaller)7394",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7693": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7285": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7592": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7394": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df06679a7a1a5d36aaeae565fe4799e7b2599aae415df764f7016bc56ae7ca4d": {
      "address": "0x0F89cEe939D19991B4A91892f68B986A30b0C769",
      "txHash": "0x28485448a0675223dbf6a5f7416dd95c080695bfa6866cf4bdede64d3ff67fe0",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "27f4a9e117dcb563a260bff41ad21ee999d623d3b69431bd1026a8f2679dec98": {
      "address": "0x88a4B5cCD44C6F7E4002D3ec5A658E76Ee6aA3e0",
      "txHash": "0x94a6ba5add895fb5028f11c9ccbced36023282876e320b85772813248ac5e012",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7698",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7698": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3d41916465e523a5623cf066ea0a572eada0bac8bc371cefd68f1b0f69429967": {
      "address": "0xB915C848595a468463902c29052859006139E287",
      "txHash": "0x04c8f0184001fb40f042e67923dd7c3a0507ededc7aab6c907ed05c0742ce227",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6148_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7473",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6391_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7473": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6391_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6391_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6148_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6148_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fb204a33589e40e1b8de34fde9a8d489e2b755b61c6cbd71f49cbbc7dd76ffe": {
      "address": "0x2A598A6d04AcD6fc3211B5ae09DB576a44ae9345",
      "txHash": "0xcaff6a0c19f0ccc4997711ab99f9424b8bbad0930af0b571621fc822740e41d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6148_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7471",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6391_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7471": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6391_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6391_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6148_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6148_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c577a8a83cf22188e3558831d3c2928b5fd00d3de2e0f79efff786fa550285a9": {
      "address": "0x50D7Ea91E26867C43B50Dd778311883D4d6eF7C1",
      "txHash": "0xf122bc4aca5fa5820395f017457676f685d1c749c02ccb8caf4c72bda4a724a8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7356",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7664",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7356": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7664": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a9c364fb5f1a6196a8129504776abe8b31785aba31d9991036be57fe27e90a6a": {
      "address": "0xa4ab4eD33402bD446102118Da79d08D0673ec5E3",
      "txHash": "0xaa515ae6f0b33c3f41ab4c153f90c37a81403d7e355e02ac695452cab5356d4d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2082_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2082_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1902_storage"
              }
            ]
          },
          "t_struct(Set)1902_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84b2cd12d0a694086b0ede2a7b4b89ca24374d39ed54ade92ea0140b5bb02d74": {
      "address": "0xe2088451C0e35EF68B18Aa899Ed9B4caD1f471b3",
      "txHash": "0xffd7e28da7901a9b891f2850362687445141bd776cb019f2e3657ce26a3c4315",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7756",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7343",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7655",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7459",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7756": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7343": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7655": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7459": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4532b1182aa8da94f5962e83048f17d4763e09346ed5f4dd663a82cf0707de0a": {
      "address": "0x12C40eA0955E9e8C3E8042b92a8FfDb727a5172F",
      "txHash": "0x86a1e7e5c6f0e40bfadd1bdedc2ee48306c4a7ff9a4de7e1861905b426abc0e0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7508",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4163",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7816",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4163)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7508": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4163": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7816": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4163)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d10a769a32c54829e4fc194654b622daab01ef9cd51f06752d563206b95cb18e": {
      "address": "0xeafC3Fece8609155580fF0E28EB83D5b4d30664b",
      "txHash": "0xaa16dd73b8275175ed43c680f235b41c06c41a8baeae418e603135d38530a09a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7285",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4164",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7593",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4164)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7285": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4164": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7593": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4164)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dc651205e67b7c115150e2d5759bafa57507239f2052c8fab9876cd2f52fb10d": {
      "address": "0x15c09ac5B28c8B940F4ACE39f616Ea8F5D4Ae3F1",
      "txHash": "0x9243ea65dadda3c457dd2a8a2cf219530f4799df2c4c6809576b12cc03e30d1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7621",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7201",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7520",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7324",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7621": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7201": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7520": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7324": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd2396522a124a26ff620d4435f741fefcd35e76a7a862e2c722edb76334a849": {
      "address": "0x411f2a7ABb29530f9b6749Fe9C3d9065565b1879",
      "txHash": "0x4e84c9ba5b47e832594b3c420c326933de39c126b048be81aaa8474a6b12e3f0",
      "layout": {
        "storage": [],
        "types": {}
      }
    }
  }
}
