{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x84E9D39CDec17B7b8200969ABDBFff4d66307D1D",
    "txHash": "0xc1280bd903b3dbb4276b256c7491acde634c2ce7cbfa316e12ce923fb1799e2c",
    "deployTransaction": {
      "hash": "0xc1280bd903b3dbb4276b256c7491acde634c2ce7cbfa316e12ce923fb1799e2c",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x5C9E0992d9562cfcDc2095082AEfce4E8aF98543",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x0db58580"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0b0c66"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xa085d0bd331ee24c6bde4f09b6d5335ea4d7f047b645813a833a2dbbb43c4bc5",
      "s": "0x42f678b32df997e1aaaf69fd14aeec9f2bbc29d012cb566ba16670ff767f6c2d",
      "v": 168,
      "creates": "0x84E9D39CDec17B7b8200969ABDBFff4d66307D1D",
      "chainId": 66
    }
  },
  "proxies": [
    {
      "address": "0x5921aB77b0d2f7D67f4FA90D786444BF3a263Cea",
      "txHash": "0x3362d0a5e772a64b12c88e5669a5dcfbe8183077ff0e22ebdc716674fc3db471",
      "kind": "transparent"
    },
    {
      "address": "0x028812c385AAD3FBd322fa15fB1C8872C193B750",
      "txHash": "0x78a23a5cbf4ea1ad9a6c75bce74f4cae44c7da224b8791b765ac7262cd0da6d8",
      "kind": "transparent"
    },
    {
      "address": "0x05d75d25c8ec102538Dd7Fc39e19d7A5dB8faeCE",
      "txHash": "0xc22dfe90380a10b7eaece1d2e7531fb39b5df91506876d1a3782af1a2e9f3937",
      "kind": "transparent"
    },
    {
      "address": "0x223b20dF5c92A1dAb7258b851bE19a5CfAa1Cfbe",
      "txHash": "0xf49546b7a624df65d45818346f7d6ceb1936ce153b0efa7571ae10254961bbc0",
      "kind": "transparent"
    },
    {
      "address": "0x1217082C48603881cF6145aF509Fdca9582FAb0c",
      "txHash": "0xac164afbdb46a21d152f618fdb9cb97e4bf619fa8a5ae86b2881156d0d16280c",
      "kind": "transparent"
    },
    {
      "address": "0x8A341FA25Cf0a35277dd199BdAC61C5a9b261974",
      "txHash": "0x36c8d26de34c0097aab78ce7e6fa30ffad64beaa1fe545eeadbea25faa7a5a1f",
      "kind": "transparent"
    },
    {
      "address": "0x037feaCdF68F55Ff2BE854b0c75104aeB6213881",
      "txHash": "0x228b78695381bf42eb3a05cc843941c463ed9150f88bfb8cf692f7f32d88cd76",
      "kind": "transparent"
    },
    {
      "address": "0x03D496A52b61976aA4147BAe18272A48691c8FbB",
      "txHash": "0x44531b11783fe675bdfc16bfbef70e3ee6d86daf375b9d28af1d00dd0247b3ca",
      "kind": "transparent"
    },
    {
      "address": "0x6B7C026621d53d092FB446C2162D1DFc048bC9D7",
      "txHash": "0xf27edf3f9ae54f959d242af64dace69676edce944e56eef24bb4044bf1072106",
      "kind": "transparent"
    },
    {
      "address": "0x6d981C8535af305915c7eC2FceFA126d6286c0F5",
      "txHash": "0x58a088dd4d8c1b7d972cb878eac271bffe5021e2e4a2669080133f79a5bc193b",
      "kind": "transparent"
    },
    {
      "address": "0xA7FeD91A00fE5847cc4970a1122fA5bCf2700291",
      "txHash": "0x976b9ce6607b517d555e22d4c41c5110cca4a11cb6e4aa839f1a2fa8f593b505",
      "kind": "transparent"
    },
    {
      "address": "0x8b0963Ac00776111160f9bAB0E1835719ce5ff6C",
      "txHash": "0x46c5d48c5c27507c393a1e1945236e2df3f80ddb495a4dec3eb8834410fcd80c",
      "kind": "transparent"
    },
    {
      "address": "0x1ee6dCa80F09E7d387DbFA8EB2Dea08e83FaD182",
      "txHash": "0x4e97c2a3b42f5f54fa8af5ae7f5691ab2335127d223253d39c2846ed816e8712",
      "kind": "transparent"
    },
    {
      "address": "0xBe7F5e9eC0b1911251D61Ac64860a315a5185A18",
      "txHash": "0x50a650b75f85e4f49f8e3b069e1618320f61bd64c6625865ec7baecf7a1f9d24",
      "kind": "transparent"
    },
    {
      "address": "0xA08584E87703Da3E454133080362FfBE545dEf11",
      "txHash": "0x805bf924bf5e75fa8c2bc3166b3dc1c10511643561cdb03d233e00f5e714d6c2",
      "kind": "transparent"
    },
    {
      "address": "0xf2575b39ADF3fC2d9370862e17efDCC79D935c00",
      "txHash": "0xd9c56ee944961736ae553a6e5dacc29d28b77b5adf02a5967c74a07944869d17",
      "kind": "transparent"
    },
    {
      "address": "0xaca1227d3526D78a7Df361dF3495Aa2A64042808",
      "txHash": "0xd5193d0497f3add5057a05fbac0b011ed22af7643d1dcdacb140d21f7dbe7a31",
      "kind": "transparent"
    },
    {
      "address": "0xdE8B716F43dcD94e4D4afE73D040825b2E990E6D",
      "txHash": "0x042a01a3d9a37e4f2efc6a96e770cf5f4951eb716c5fbab20ea23ec854014495",
      "kind": "transparent"
    },
    {
      "address": "0x35b161F6F1Aa5787045505bd2E8307195485725D",
      "txHash": "0x8d677ea42b7e6d7fd301ee0a1e97d2c72fe2285d304fb65839a6331d885ad0f6",
      "kind": "transparent"
    },
    {
      "address": "0x487Fd5C13f5764b798D4AecaEA79B2e0DF5d3952",
      "txHash": "0x7b7089f1e09975d09308be736f76dd8341c9d2a3b01b71237e232b5302b05263",
      "kind": "transparent"
    },
    {
      "address": "0xfC321C3a2b06002080292145B88d9735F4156250",
      "txHash": "0xc06a6aa3bcc9c3d8a90d0ec4a3c142f59b1072194f281048fc7696cb2dff85f7",
      "kind": "transparent"
    },
    {
      "address": "0xf195EeC267130FFF260b107a26b94976f59e09e2",
      "txHash": "0xe5eef9161a7557bcf98b5bafd3443b895c759e13f10b8f506f071656a11aa72b",
      "kind": "transparent"
    },
    {
      "address": "0x353881c2afda8D07Db6c01f59D91Bef75570d4D2",
      "txHash": "0x5e7b73c0ec0aa799e62acf385ad28a673527911542ad3580a22c8e3b83abccd7",
      "kind": "transparent"
    },
    {
      "address": "0xA86E17e1B40F251d50Ce64Da1f2F824Ff9520E44",
      "txHash": "0x260f60569cc4541b83646b8d9f547fed071970cf9f01a713c9563b82a1362ecf",
      "kind": "transparent"
    },
    {
      "address": "0xE5bbC1FaF1dD83251B2949c08dE53Ba86BFf4Fb8",
      "txHash": "0x9571135fd749c81aa34442c79a9e9da904d84711614ac5ce7337b357d0b0dfa0",
      "kind": "transparent"
    },
    {
      "address": "0x5CB3Ff30Ae417fddC9301b64C35A211f40f801C2",
      "txHash": "0x0359fd64c6818a0efbb1cfb9684b813d0a2d39da8f7937a68d94e433b7cfbc6b",
      "kind": "transparent"
    },
    {
      "address": "0xc4a937E3fe940226A5C4372b0563C6c2Ac76F542",
      "txHash": "0x1b1a948746f89b3fc50b1a59360e83d4f74a7f2cc2a8c8c65c507cc80dff724b",
      "kind": "transparent"
    },
    {
      "address": "0xe26dC64f1B833ee829B431B0293C9EB677E60730",
      "txHash": "0xe69b2f636e1cc4775f002c083dbc25b6ac58e6b72db302269b19fe29e824d8be",
      "kind": "transparent"
    },
    {
      "address": "0xEc90274Bca42C2FEb76986D6EF54d662ba2aE0Ae",
      "txHash": "0xb633bc8e39c8f3430ca7e2f4a07c31b110638daf71a4b614dae9d4c35b1d8273",
      "kind": "transparent"
    },
    {
      "address": "0x3ccFDc23678df1f5C74850EEe339d659307461eb",
      "txHash": "0x25306fcb96e4679145af6d6ad259540ef8a8e7754bbabd726997b633f90208db",
      "kind": "transparent"
    },
    {
      "address": "0x0c9145FFC4269e8658db245080535a48c15eaf84",
      "txHash": "0x58647c4c93f59fae4f5d0bc1271509e9b5f5ca56eb1dc981dfde9041d603b507",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9d587ac7a5412f45865c004e824a80beab578bc831f039e5eae7d5ab98eed3cc": {
      "address": "0xEE8b89D030eCD113F8f3dA2B9F2749c7CcEb7038",
      "txHash": "0x9f2dc11f5afa19a83ddd01e7c37ba3bfa3f58df8f9d0d5cdb4f1bd7a4696f9ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2082_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2082_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1902_storage"
              }
            ]
          },
          "t_struct(Set)1902_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "36a12332aa92bd25d66faabe8b5034fcd7b4d61a5a9f1d211505bfe8c03dae6b": {
      "address": "0x4bA7C421e053cCCC882D592c9fd94B5087943262",
      "txHash": "0xf6beeb1ceab9a69b3d40e5560bfcd2c062eb53e466f9f52d09b70d8d9fb3d444",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:20"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)6991",
            "src": "contracts/Config.sol:21"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)6711",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)6918",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:25"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)6991": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)6711": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)6918": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ffd6c1ec7d99c641b9768c51d0c309d3061c8a4ddfa5ced4d3099819a103a80e": {
      "address": "0x6DE2CEdb9a6C4943226138a6dcA00822AF79957c",
      "txHash": "0x886552ab6227c3fa253969f6f69c54f4045e122121a35891299d1388ff3a1064",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6253_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7681",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7598",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6496_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7681": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7598": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6496_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6496_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6253_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6253_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0fbfb83e471bd15dc5f96397af982be25746fc8aed0160b4fa521753cd2a105b": {
      "address": "0xf14a7d43bedaC1C17Da9C22cf3D8c900AA8DEcA9",
      "txHash": "0xb639e24731cb26efaf4ac05a7510be561b367bcb02f3b721aef117d5b3331706",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)6767",
            "src": "contracts/Gateway.sol:77"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:79"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)3906",
            "src": "contracts/Gateway.sol:80"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)6963",
            "src": "contracts/Gateway.sol:81"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:82"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:83"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:84"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)3906)",
            "src": "contracts/Gateway.sol:86"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:108"
          }
        ],
        "types": {
          "t_contract(IConfig)6767": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)3906": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)6963": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)3906)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_struct(PendingTransfer)3946_storage)dyn_storage": {
            "label": "struct Gateway.PendingTransfer[]"
          },
          "t_struct(PendingTransfer)3946_storage": {
            "label": "struct Gateway.PendingTransfer",
            "members": [
              {
                "label": "crossId",
                "type": "t_uint256"
              },
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "metaAmount",
                "type": "t_uint256"
              },
              {
                "label": "metaFee",
                "type": "t_uint256"
              },
              {
                "label": "feeFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "50095f8c71b08a867a3a94932dee3087f468e2cbf73dd9de47fd71af85b4c08f": {
      "address": "0x2d7Fe908524180D17C058e6C5388738C1b30d198",
      "txHash": "0xc0d6f2d1be0893118356fcf6d2d5fbbf43707f297fa3ce00691a83db25c58e44",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "f634160710d3da46a4fc8767eb74226c9fba603fb35f23f0da1e2fb86a895fe3": {
      "address": "0x1A1153fD4385A7eAf1beF06bdC0EFabCAaEb2973",
      "txHash": "0xb27cca0863a700ceb4e585e91dc9d796f8ea13268d86006fa5a1cfccd2209a2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)6991",
            "src": "contracts/Gateway.sol:81"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:82"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:83"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)3966",
            "src": "contracts/Gateway.sol:84"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7195",
            "src": "contracts/Gateway.sol:85"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:86"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)3966)",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:108"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:102"
          }
        ],
        "types": {
          "t_contract(IConfig)6991": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)3966": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7195": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)3966)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_struct(PendingTransfer)4009_storage)dyn_storage": {
            "label": "struct Gateway.PendingTransfer[]"
          },
          "t_struct(PendingTransfer)4009_storage": {
            "label": "struct Gateway.PendingTransfer",
            "members": [
              {
                "label": "crossId",
                "type": "t_uint256"
              },
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "metaAmount",
                "type": "t_uint256"
              },
              {
                "label": "metaFee",
                "type": "t_uint256"
              },
              {
                "label": "feeFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bb33f776b0a0db178b1d0e943f5ce190bebfd9291d0718b93fe111a8f1df4ac9": {
      "address": "0x43CABF9758CA9D74A1480922c2FE8fFA1401a51e",
      "txHash": "0xfd923a504d5694e6cae55e4f4d169b64e9acbe3b78f7e86178cf93ad460f161f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7692",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7286",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7591",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7395",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7692": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7286": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7591": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7395": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e610cdb043c04368bc162c18bb45e2ddc8a128ca78113a3ccabd3731eea574dc": {
      "address": "0x436C1C42D975164B7221e0F7423a16Bc45790564",
      "txHash": "0x1af5913d0b7e68397a7f929ecda434eea0dcd70a29b7b7bb3a7a40e72ff7ecaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7924",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7514",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7823",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7623",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7924": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7514": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7823": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7623": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8cd55b3c2eecfdbabe4004700c83deb32c1302c4f83828841e8ab4208deb150e": {
      "address": "0x5050248968BAF9682dAa09a0673731d9D62FfBd2",
      "txHash": "0x47148e4399b06b63a9686f4acd154549aa209e1e3fe05e4a2628ddbd8cf049bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7592",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4118",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7904",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4118)",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "pending",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:102"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:103"
          }
        ],
        "types": {
          "t_contract(IConfig)7592": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4118": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7904": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4118)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "db17e03e10e8c2ca0cf91a19fe66bdddf451c068645fceecc2ecbffcffc86253": {
      "address": "0xcD382E92cEFDf036d8789ac250885793c26d88Aa",
      "txHash": "0x94f2523ee0cbd1b95d0af7aa1e5450a9f48d7e8d3ced9266781b26dd05bf4c7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7693",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7285",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7592",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "_extCaller",
            "type": "t_contract(IExtCaller)7394",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7693": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7285": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7592": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7394": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df06679a7a1a5d36aaeae565fe4799e7b2599aae415df764f7016bc56ae7ca4d": {
      "address": "0x386eE1360a4bad8Bf9ec802Fb2417B97826e97b7",
      "txHash": "0xfcd2e6b5e3c78bd5654e3d3deef9ab984e830e4f635faa601f9fbd455ec8b65d",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "27f4a9e117dcb563a260bff41ad21ee999d623d3b69431bd1026a8f2679dec98": {
      "address": "0x3B7dFBAdC0DF01E08D2302BE6c47B3677AA23E1E",
      "txHash": "0x4d4166eafd37acf5cf244255e424929e224197daf8100d0fba7bf8515ae65bc1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7698",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7698": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3d41916465e523a5623cf066ea0a572eada0bac8bc371cefd68f1b0f69429967": {
      "address": "0xfAA3857441F9A19fb936eca5BD183Ec10bF151d8",
      "txHash": "0x003dc3d2c9fc4f710e05f2a1871418d1272b012e606b5572d41de9205bd4e309",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6148_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7473",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6391_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7473": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6391_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6391_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6148_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6148_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a3d717aba84fcb5374d62a04dd9c32a9eb6963ed9473a79fb951ee4eb0b0cb33": {
      "address": "0x98fb73AE819192bF36Ff40ABD5Ceae91b848d4dA",
      "txHash": "0x0f17a0a5bdb3296c2c4d2dd70f8a048001cc3b7d98f9bd917500493a2620bf85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7398",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7708",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7398": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7708": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "55ea978c611f03afa1b8af282d1d3e0f2bf67d9536394d6466e70d7f9023fa01": {
      "address": "0x6A553533345B18A851C9D8de10b99bB79bD93975",
      "txHash": "0x5dbc62b27c301398df871116cf7bcdfe6b71b656a69909d695a6815ff7b6f6fc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7398",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7708",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7398": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7708": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e438401d20bb882dcdfddef2464e315cb4bdbfd52973a5e69ae0c6664e7d4d76": {
      "address": "0x773C15F122F162Ff50f08F0d187F030F50a90d8d",
      "txHash": "0x1324ef17f46ccfca65b273cf0b30413c584bbd50a42c3ef6c158cb788908387a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6152_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7481",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7398",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6395_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7481": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7398": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6395_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6395_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6152_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6152_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "54325598b6f5949b4250dc06625c75ce4cf7ce7a3cf98b1ab084c33730360049": {
      "address": "0xB8c221dc3EE9132015AE6816cEF428089498fB82",
      "txHash": "0x1980734d9cbbca8137a53bf775e4515d00384f8fb9746bb8c02e02c50749bc17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7398",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7708",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7398": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7708": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7b899499c0aa9442c082232928c74ae79c2f7ead59b33479e87522fc3be6479e": {
      "address": "0x6cE07781968c5f4747AcDd46D0975A797a8B1143",
      "txHash": "0xe69512ac52026a0214cdd5d776932d9d8823690bbd048645fcf17726eddd2de1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6152_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7481",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7398",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6395_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7481": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7398": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6395_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6395_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6152_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6152_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fb204a33589e40e1b8de34fde9a8d489e2b755b61c6cbd71f49cbbc7dd76ffe": {
      "address": "0x9B47c2001706774Bd87345De45c87c36D8F904CF",
      "txHash": "0xb97f5068d219d6c17dc194065b349a72126b0c39479f585a081c37bf463cff6b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:37"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:39"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:41"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:43"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:317"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewardFluxPerShareStored",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:24"
          },
          {
            "contract": "RewardDistributor",
            "label": "rewards",
            "type": "t_mapping(t_address,t_struct(UserRewards)6148_storage)",
            "src": "contracts/Vault.sol:25"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFeeFlux",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:26"
          },
          {
            "contract": "RewardDistributor",
            "label": "reservedFee",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:27"
          },
          {
            "contract": "Vault",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Vault.sol:71"
          },
          {
            "contract": "Vault",
            "label": "ftoken",
            "type": "t_contract(IFToken)7471",
            "src": "contracts/Vault.sol:72"
          },
          {
            "contract": "Vault",
            "label": "config",
            "type": "t_contract(IConfig)7390",
            "src": "contracts/Vault.sol:73"
          },
          {
            "contract": "Vault",
            "label": "gateDebt",
            "type": "t_mapping(t_address,t_struct(GateDebt)6391_storage)",
            "src": "contracts/Vault.sol:78"
          },
          {
            "contract": "Vault",
            "label": "totalToken",
            "type": "t_uint256",
            "src": "contracts/Vault.sol:79"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IFToken)7471": {
            "label": "contract IFToken"
          },
          "t_contract(IConfig)7390": {
            "label": "contract IConfig"
          },
          "t_mapping(t_address,t_struct(GateDebt)6391_storage)": {
            "label": "mapping(address => struct Vault.GateDebt)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(GateDebt)6391_storage": {
            "label": "struct Vault.GateDebt",
            "members": [
              {
                "label": "debt",
                "type": "t_int256"
              },
              {
                "label": "debtFlux",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserRewards)6148_storage)": {
            "label": "mapping(address => struct RewardDistributor.UserRewards)"
          },
          "t_struct(UserRewards)6148_storage": {
            "label": "struct RewardDistributor.UserRewards",
            "members": [
              {
                "label": "rewardFluxPerShare",
                "type": "t_uint256"
              },
              {
                "label": "rewardFlux",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c577a8a83cf22188e3558831d3c2928b5fd00d3de2e0f79efff786fa550285a9": {
      "address": "0x1d40C985C0170E2Bd71CaE2Ec8FBe2B78b318BfE",
      "txHash": "0x9f1ddd8fb04b49eebb4e226fc72f1be2013e216b26b240f1b8ccbacc3fb96962",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7356",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4080",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7664",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4080)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7356": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4080": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7664": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4080)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "577fd76c0d7a2a1c5af8bf7a48a43a82b71c67ac04f5f37a9f27eb3f9bbae25f": {
      "address": "0x08a6A787b09829B094Ce81347f0c2150Fa0BaF31",
      "txHash": "0xf31bffbac311b51db54afe8b4589efc98d8f93b74daa15491d224322de8087d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2082_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2082_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1902_storage"
              }
            ]
          },
          "t_struct(Set)1902_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a9c364fb5f1a6196a8129504776abe8b31785aba31d9991036be57fe27e90a6a": {
      "address": "0xa601fA299ED809461BEFc1b3bE03E527Ead4A6Dd",
      "txHash": "0xa7caf78e1fbc752509d917f9b393c8094f215f5eff41493b22a81567d29129c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)159_storage)",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:58"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/AccessControl.sol:210"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(RoleData)159_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)159_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2082_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2082_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1902_storage"
              }
            ]
          },
          "t_struct(Set)1902_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84b2cd12d0a694086b0ede2a7b4b89ca24374d39ed54ade92ea0140b5bb02d74": {
      "address": "0x09Fc6e185763E51973fDA93D53e133BeFD0E29a8",
      "txHash": "0x85ded2db2861bd32fbd0a009bb4b88d4293aee4e51539e049927cd9f2865ddea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7756",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7343",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7655",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7459",
            "src": "contracts/Config.sol:28"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7756": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7343": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7655": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7459": {
            "label": "contract IExtCaller"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4532b1182aa8da94f5962e83048f17d4763e09346ed5f4dd663a82cf0707de0a": {
      "address": "0x53182d21Cb530BBD7c19E15F3e8a70aeb85Aa499",
      "txHash": "0x1ac453cafa9deccaa66fb7903d783018381741eccbf79741362c901b08707ceb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7508",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4163",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7816",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4163)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7508": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4163": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7816": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4163)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a6be11233fdb962f849d49b3189c1477bae78f9f86964017ee3fc8617da4a1b5": {
      "address": "0x2c43a9056396b57BD887aC5dfE9Eb389321a8cA7",
      "txHash": "0xca53f4cb107f891b6d7e9fce6ad2f136c254b6166a029a181c337db4320c5a30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7989",
            "src": "contracts/Gateway.sol:232"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:233"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:234"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4644",
            "src": "contracts/Gateway.sol:235"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)8297",
            "src": "contracts/Gateway.sol:236"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:237"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:238"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:239"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4644)",
            "src": "contracts/Gateway.sol:240"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:241"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:242"
          }
        ],
        "types": {
          "t_contract(IConfig)7989": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4644": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)8297": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4644)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df7f631fa16880bf38e30b9f99b2b5184fccc46a18d8d71c4d4d26edf3f62845": {
      "address": "0x9fe7928c375D504155F19A7d3b65A68fFbC8E0A2",
      "txHash": "0xa822eb8eca646f5b07d652756e8de924843b2ec56c03737618c619e3f290ee35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7989",
            "src": "contracts/Gateway.sol:232"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:233"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:234"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4644",
            "src": "contracts/Gateway.sol:235"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)8297",
            "src": "contracts/Gateway.sol:236"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:237"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:238"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:239"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4644)",
            "src": "contracts/Gateway.sol:240"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:241"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:242"
          }
        ],
        "types": {
          "t_contract(IConfig)7989": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4644": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)8297": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4644)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "925e6a51b48d609f374da35f497aa0ae05fb3a45b6fddb6dc77c4895e7a2eaf1": {
      "address": "0xA38a2038136a57B6B1019a50A91Ab66738905a8A",
      "txHash": "0x6145d064ec9f6cd651b5a770aff735d634c4d2cc317bd2b0ec153b3952ad4d75",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7661",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7232",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7560",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7364",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7661": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7232": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7560": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7364": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "77182fd0b3fe49164dceafe6d13fa5dcefd8d4a463401c47dd35d0c24f9042e3": {
      "address": "0xfa8440025d7EE21925be5A4adfd4aC35A156e0ed",
      "txHash": "0xdcb0967dbb483ff1218a79ed93f8290f18038fc3eaafaf6d50db1aa83953e31f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7325",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4206",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7633",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4206)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7325": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4206": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7633": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4206)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0450e02495a8679b1fb2a9133ff36b0f83653b8ba2c75603942a9fa5512967a8": {
      "address": "0x8b963E30f67C9a6C3F88306e799Fe2bBC3626f2E",
      "txHash": "0x070b87edb4d42021f0a51407cd982fd5f5f9b953a7f1cc4327c070534409ee1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7704",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7275",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7603",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7407",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7704": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7275": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7603": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7407": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0dad26fb3b16a303ceec609aa716e29c11f80a83fedfb6410e82f8878eb56bda": {
      "address": "0xcE49C01bFc05aF958d8F5F2776b32c426420Fd1e",
      "txHash": "0xd311ad4278d4193c5995d09ad726139b7a880a2f48c880c8e2cef39b4b7a84e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7694",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7265",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7593",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7397",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7694": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7265": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7593": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7397": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a4cc0f0204b9933c77ffb2106dd4cea29bae8282b54573335576b6889958148a": {
      "address": "0x8d85d418fB269Ced39F74CEA6e06dDeA5930E774",
      "txHash": "0x07793d235f893bed182ac3ea59be10646ee51fc8e42cb5bb2c9615d5f3ac90e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7716",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7287",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7615",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7419",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7716": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7287": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7615": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7419": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d10a769a32c54829e4fc194654b622daab01ef9cd51f06752d563206b95cb18e": {
      "address": "0x5Ce75A714726Ec56Fb4DeDe8da621a1a5C310807",
      "txHash": "0x54322963c92c026b70c255fc39e350941ade9153c9273e7e818d02cb7c3e8680",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Gateway",
            "label": "config",
            "type": "t_contract(IConfig)7285",
            "src": "contracts/Gateway.sol:87"
          },
          {
            "contract": "Gateway",
            "label": "remotePolyId",
            "type": "t_uint64",
            "src": "contracts/Gateway.sol:88"
          },
          {
            "contract": "Gateway",
            "label": "remoteGateway",
            "type": "t_address",
            "src": "contracts/Gateway.sol:89"
          },
          {
            "contract": "Gateway",
            "label": "bindStatus",
            "type": "t_enum(CrossStatus)4164",
            "src": "contracts/Gateway.sol:90"
          },
          {
            "contract": "Gateway",
            "label": "vault",
            "type": "t_contract(IVault)7593",
            "src": "contracts/Gateway.sol:91"
          },
          {
            "contract": "Gateway",
            "label": "token",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Gateway.sol:92"
          },
          {
            "contract": "Gateway",
            "label": "nextCrossId",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:93"
          },
          {
            "contract": "Gateway",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/Gateway.sol:94"
          },
          {
            "contract": "Gateway",
            "label": "existedIds_deprecated",
            "type": "t_mapping(t_uint256,t_enum(CrossStatus)4164)",
            "src": "contracts/Gateway.sol:95"
          },
          {
            "contract": "Gateway",
            "label": "pending_deprecated",
            "type": "t_array(t_bytes_storage)dyn_storage",
            "src": "contracts/Gateway.sol:96"
          },
          {
            "contract": "Gateway",
            "label": "crossConfirms",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "contracts/Gateway.sol:97"
          }
        ],
        "types": {
          "t_contract(IConfig)7285": {
            "label": "contract IConfig"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_address": {
            "label": "address"
          },
          "t_enum(CrossStatus)4164": {
            "label": "enum Gateway.CrossStatus",
            "members": [
              "NONE",
              "PENDING",
              "COMPLETED",
              "REVERTED"
            ]
          },
          "t_contract(IVault)7593": {
            "label": "contract IVault"
          },
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(CrossStatus)4164)": {
            "label": "mapping(uint256 => enum Gateway.CrossStatus)"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dc651205e67b7c115150e2d5759bafa57507239f2052c8fab9876cd2f52fb10d": {
      "address": "0x5C9c2530b42d9b49D374CB298334b3179075C333",
      "txHash": "0x2334d8af55d65c9a4afc434d9688285fa3ac1acfd1caf8239d8f95c95a4290e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Config",
            "label": "FLUX",
            "type": "t_contract(IERC20)1599",
            "src": "contracts/Config.sol:22"
          },
          {
            "contract": "Config",
            "label": "ccmp",
            "type": "t_contract(IEthCrossChainManagerProxy)7621",
            "src": "contracts/Config.sol:23"
          },
          {
            "contract": "Config",
            "label": "access",
            "type": "t_contract(IAccess)7201",
            "src": "contracts/Config.sol:24"
          },
          {
            "contract": "Config",
            "label": "router",
            "type": "t_address",
            "src": "contracts/Config.sol:25"
          },
          {
            "contract": "Config",
            "label": "oracle",
            "type": "t_contract(IPriceOracle)7520",
            "src": "contracts/Config.sol:26"
          },
          {
            "contract": "Config",
            "label": "boundVault",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Config.sol:27"
          },
          {
            "contract": "Config",
            "label": "extCaller",
            "type": "t_contract(IExtCaller)7324",
            "src": "contracts/Config.sol:28"
          },
          {
            "contract": "Config",
            "label": "crossFee",
            "type": "t_mapping(t_uint64,t_uint256)",
            "src": "contracts/Config.sol:29"
          }
        ],
        "types": {
          "t_contract(IERC20)1599": {
            "label": "contract IERC20"
          },
          "t_contract(IEthCrossChainManagerProxy)7621": {
            "label": "contract IEthCrossChainManagerProxy"
          },
          "t_contract(IAccess)7201": {
            "label": "contract IAccess"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IPriceOracle)7520": {
            "label": "contract IPriceOracle"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_contract(IExtCaller)7324": {
            "label": "contract IExtCaller"
          },
          "t_mapping(t_uint64,t_uint256)": {
            "label": "mapping(uint64 => uint256)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd2396522a124a26ff620d4435f741fefcd35e76a7a862e2c722edb76334a849": {
      "address": "0x1F7820ac86E67f160C41fdb0914A7162675ea718",
      "txHash": "0x703680f847f895962afb30383dc147ec45a24e4922aa4db1bd612a963e3905e7",
      "layout": {
        "storage": [],
        "types": {}
      }
    }
  }
}